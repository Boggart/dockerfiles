name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
    inputs:
      job_to_run:
        description: 'Job to run'     
        required: true
        default: 'changes' 
        type: choice
        options:
        - changes
        - squid_proxy

env:
  REGISTRY: ghcr.io

jobs:

  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      squid-proxy: ${{ steps.filter.outputs.squid-proxy }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          squid-proxy:
            - 'squid-proxy/**'
          
#  build:
#    needs: changes
#    if: ${{ needs.changes.outputs.squid-proxy == 'true' || inputs.job_to_run == 'squid_proxy' }}
#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v3
#    - name: Build the Docker image
#      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
#      working-directory: squid-proxy

  build-squid_proxy:
    needs: changes
    if: ${{ needs.changes.outputs.squid-proxy == 'true' || inputs.job_to_run == 'squid_proxy' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: squid-proxy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/boggart-squid-proxy

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./squid-proxy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
